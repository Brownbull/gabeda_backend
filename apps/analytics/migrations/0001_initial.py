# Generated by Django 5.2.7 on 2025-10-29 03:50

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataUpload',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_name', models.CharField(max_length=255, verbose_name='file name')),
                ('file_size', models.IntegerField(verbose_name='file size (bytes)')),
                ('file_path', models.CharField(max_length=500, verbose_name='file path')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20, verbose_name='status')),
                ('row_count', models.IntegerField(blank=True, null=True, verbose_name='row count')),
                ('error_message', models.TextField(blank=True, verbose_name='error message')),
                ('uploaded_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='uploaded at')),
                ('processing_started_at', models.DateTimeField(blank=True, null=True, verbose_name='processing started at')),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True, verbose_name='processing completed at')),
                ('analysis_start_date', models.DateField(blank=True, null=True, verbose_name='analysis start date')),
                ('analysis_end_date', models.DateField(blank=True, null=True, verbose_name='analysis end date')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_uploads', to='accounts.company')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_uploads',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='dataset name')),
                ('dataset_type', models.CharField(choices=[('raw', 'Raw Data'), ('filtered', 'Filtered Data'), ('aggregated', 'Aggregated Data'), ('analytics', 'Analytics Results')], max_length=20, verbose_name='dataset type')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('file_path', models.CharField(max_length=500, verbose_name='file path')),
                ('file_size', models.IntegerField(blank=True, null=True, verbose_name='file size (bytes)')),
                ('row_count', models.IntegerField(blank=True, null=True, verbose_name='row count')),
                ('column_count', models.IntegerField(blank=True, null=True, verbose_name='column count')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('context_folder', models.CharField(blank=True, max_length=500, verbose_name='context folder')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasets', to='accounts.company')),
                ('upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='datasets', to='analytics.dataupload')),
            ],
            options={
                'db_table': 'datasets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnalyticsResult',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('result_type', models.CharField(choices=[('kpi', 'KPI'), ('alert', 'Alert'), ('insight', 'Insight'), ('forecast', 'Forecast'), ('pareto', 'Pareto Analysis'), ('inventory', 'Inventory Health'), ('peak_times', 'Peak Times'), ('cross_sell', 'Cross-Sell Opportunity'), ('rfm', 'RFM Segmentation')], max_length=20, verbose_name='result type')),
                ('title', models.CharField(max_length=200, verbose_name='title')),
                ('value', models.JSONField(verbose_name='value')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='metadata')),
                ('visible_to_roles', models.JSONField(blank=True, default=list, verbose_name='visible to roles')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('analysis_date', models.DateField(blank=True, null=True, verbose_name='analysis date')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_results', to='accounts.company')),
                ('upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics_results', to='analytics.dataupload')),
            ],
            options={
                'db_table': 'analytics_results',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(max_length=100, verbose_name='transaction ID')),
                ('date', models.DateField(verbose_name='transaction date')),
                ('product_id', models.CharField(max_length=100, verbose_name='product ID')),
                ('product_description', models.CharField(max_length=500, verbose_name='product description')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='unit price')),
                ('total', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='total')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='cost')),
                ('customer_id', models.CharField(blank=True, max_length=100, verbose_name='customer ID')),
                ('category', models.CharField(blank=True, max_length=100, verbose_name='category')),
                ('hour', models.IntegerField(blank=True, null=True, verbose_name='hour')),
                ('weekday', models.IntegerField(blank=True, null=True, verbose_name='weekday')),
                ('month', models.IntegerField(blank=True, null=True, verbose_name='month')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='accounts.company')),
                ('upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='analytics.dataupload')),
            ],
            options={
                'db_table': 'transactions',
                'ordering': ['-date', 'transaction_id'],
            },
        ),
        migrations.AddIndex(
            model_name='dataupload',
            index=models.Index(fields=['company', 'status'], name='data_upload_company_67658c_idx'),
        ),
        migrations.AddIndex(
            model_name='dataupload',
            index=models.Index(fields=['uploaded_at'], name='data_upload_uploade_5f80ba_idx'),
        ),
        migrations.AddIndex(
            model_name='dataupload',
            index=models.Index(fields=['status'], name='data_upload_status_8301f7_idx'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['company', 'dataset_type'], name='datasets_company_caf8dd_idx'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['upload'], name='datasets_upload__d5a560_idx'),
        ),
        migrations.AddIndex(
            model_name='dataset',
            index=models.Index(fields=['created_at'], name='datasets_created_e99a8a_idx'),
        ),
        migrations.AddIndex(
            model_name='analyticsresult',
            index=models.Index(fields=['company', 'result_type'], name='analytics_r_company_04e777_idx'),
        ),
        migrations.AddIndex(
            model_name='analyticsresult',
            index=models.Index(fields=['upload'], name='analytics_r_upload__9aded1_idx'),
        ),
        migrations.AddIndex(
            model_name='analyticsresult',
            index=models.Index(fields=['created_at'], name='analytics_r_created_fb7ef8_idx'),
        ),
        migrations.AddIndex(
            model_name='analyticsresult',
            index=models.Index(fields=['result_type'], name='analytics_r_result__3e1ff6_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['company', 'date'], name='transaction_company_82ff85_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['company', 'product_id'], name='transaction_company_70e145_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['upload'], name='transaction_upload__dc18b2_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['date'], name='transaction_date_7edf95_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['transaction_id'], name='transaction_transac_5011c8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='transaction',
            unique_together={('company', 'transaction_id', 'upload')},
        ),
    ]
