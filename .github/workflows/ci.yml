name: Backend CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run linting
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --exclude=benv,migrations

    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379/0
        DJANGO_SETTINGS_MODULE: config.settings.production
        DJANGO_SECRET_KEY: test-secret-key-for-ci
        DJANGO_DEBUG: False
        ALLOWED_HOSTS: localhost,127.0.0.1
      run: |
        python manage.py test --verbosity=2

    - name: Check migrations
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        DJANGO_SETTINGS_MODULE: config.settings.production
        DJANGO_SECRET_KEY: test-secret-key-for-ci
      run: |
        python manage.py makemigrations --check --dry-run

    - name: Check code coverage
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379/0
        DJANGO_SETTINGS_MODULE: config.settings.production
        DJANGO_SECRET_KEY: test-secret-key-for-ci
      run: |
        pytest --cov=. --cov-report=xml --cov-report=term

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: backend
        name: backend-coverage
